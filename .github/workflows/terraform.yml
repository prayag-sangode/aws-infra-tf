name: 'AWS IaC using Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to run (plan, apply, destroy)'
        required: true  # The action input is now required
        default: 'plan'  # Default action is 'plan'
        options:
          - plan
          - apply
          - destroy

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

    # Initialize a new or existing Terraform working directory
    - name: Terraform Init
      run: terraform init

    # Terraform Action: Plan, Apply, or Destroy
    - name: Terraform Action
      run: |
        ACTION="${{ github.event.inputs.action || 'plan' }}"  # Default to 'plan' if no action is provided
        case "$ACTION" in
          plan)
            terraform plan
            ;;
          apply)
            terraform apply -auto-approve
            ;;
          destroy)
            terraform destroy -auto-approve
            ;;
          *)
            echo "Invalid action: $ACTION"
            exit 1
            ;;
        esac
